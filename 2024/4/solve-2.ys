#!/usr/bin/env ys-0

# dirs:
# 1 2 3
# 4 * 6
# 7 8 9

defn main():
  board =: slurp("input"):lines

  As =:
    grep _ board:coordinates2D:
      fn(j): board.get2D(j).eq(\\A)

  (comp println len):
    grep _ As:
      fn(a):
        corners =:
          join:
            map:
              fn(j): board.get2D(j.1)
              map _ (list 1 3 9 7):
                fn(dir): (nextCoordinateByDir (list dir a))
        and:
          ==: corners:len 4
          =>: corners =~ /MMSS|SMMS|SSMM|MSSM/

defn nextCoordinateByDir([dir coord]):
  nextCoord =:
    cond:
      dir == 1: list(coord.0.-- coord.1.--)
      dir == 2: list(coord.0.-- coord.1)
      dir == 3: list(coord.0.-- coord.1.++)
      dir == 4: list(coord.0    coord.1.--)
      dir == 6: list(coord.0    coord.1.++)
      dir == 7: list(coord.0.++ coord.1.--)
      dir == 8: list(coord.0.++ coord.1)
      dir == 9: list(coord.0.++ coord.1.++)
  list: dir nextCoord

defn indices(coll): (0 .. coll.#.--)

defn coordinates2D(board): (for [y indices(board) x indices(board.0)] [y x])

defn get2D:
  (board coord): board.get+(coord.0).get+(coord.1)
  (board y x): board.get+(y).get+(x)
