#!/usr/bin/env ys-0

defn main(& args):
  input =: (or args.0 "input")
  stones =: init(input)
  println: stones.blink(25):len

defn init(input):
  input:slurp:lines:first.split(" ").map(fn([w] w:N))

defn blink(stones n=1):
  if n == 0:
    then: stones
    else:
      blink _ n.--:
        apply concat:
          map _ stones:
            fn(stone):
              cond:
                stone == 0:
                  vector: 1

                stone:S:len:even?:
                  stone-left =: stone:str.subs(0 (stone:str:len / 2))
                  stone-right =: stone:str.subs(stone:str:len / 2)
                  vector: stone-left:N stone-right:N

                else:
                  vector: 2024 * stone
